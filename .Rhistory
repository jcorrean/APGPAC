data <- readxl::read_excel("Data/PAA-2024.xlsx")
library(dplyr)
datos_responsables <- data %>%
select(Nombre_del_responsable = `Nombre del responsable`,
Correo_responsable = `correo electrónico del resposable`,
Ubicacion = `Ubicación`)
data <- readxl::read_excel("Data/PAA-2024.xlsx")
library(dplyr)
datos_responsables <- data %>%
select(Nombre_del_responsable = `Nombre del responsable`,
Correo_responsable = `correos_validos`,
Ubicacion = `Ubicación`)
data <- readxl::read_excel("Data/PAA-2024.xlsx")
names(data)
library(dplyr)
datos_responsables <- data %>%
select(Nombre_del_responsable = `Nombre del responsable`,
Correo_responsable = `correo electrónico del responsable`,
Ubicacion = `Ubicación`)
data <- readxl::read_excel("Data/PAA-2024.xlsx")
names(data)
library(dplyr)
datos_responsables <- data %>%
select(Nombre_del_responsable = `Nombre del responsable`,
Correo_responsable = `correo electrónico del responsable`,
Ubicacion = `Ubicación`)
data <- readxl::read_excel("Data/PAA-2024.xlsx")
names(data)
library(dplyr)
datos_responsables <- data %>%
select(Nombre_del_responsable = `Nombre del responsable`,
Correo_responsable = `Correo electrónico del responsable`,
Ubicacion = `Ubicación`)
head(datos_responsables)
write.csv(datos_responsables, file = "datos_responsables.csv", row.names = FALSE)
# Filtrar responsables en Bogotá y Barrancabermeja
datos_responsables_filtrados <- datos_responsables %>%
filter(Ubicacion %in% c("Bogotá", "Barrancabermeja"))
View(datos_responsables)
data <- readxl::read_excel("Data/PAA-2024.xlsx")
data <- na.omit(data[c(9)])
valor_total_inversion <- sum(data$Inversion, na.rm = TRUE)
print(valor_total_inversion)
data <- readxl::read_excel("Data/PAA-2024.xlsx")
data <- na.omit(data[c(9)])
valor_total_inversion <- sum(data$`Valor total estimado`, na.rm = TRUE)
print(valor_total_inversion)
library(readxl)
PAA_2024 <- read_excel("Data/PAA-2024.xlsx")
library(dplyr)
correosBogota <- filter(PAA_2024, grepl('Bogotá', Ubicación))
correosBarrancabermeja <- filter(PAA_2024, grepl('Barrancabermeja', Ubicación))
unique(correosBogota$`Nombre del responsable`)
unique(correosBarrancabermeja$`Nombre del responsable`)
<<<<<<< HEAD
load("~/Documents/GitHub/APGPAC/Data/DataForFigure4.RData")
library(readxl)
PAA_2024 <- read_excel("Data/PAA-2024.xlsx")
View(PAA_2024)
unique(PAA_2024$`Nombre del responsable`)
unique(PAA_2024$Ubicación)
variable.names(PAA_2024)
Responsable_Ubicacion <- PAA_2024[c(14,15)]
View(Responsable_Ubicacion)
library(igraph)
int <- as.matrix(Responsable_Ubicacion)
net1 <- graph_from_edgelist(int, directed = FALSE)
summary(net1)
int <- as.matrix(Responsable_Ubicacion)
net1 <- graph_from_edgelist(int, directed = FALSE)
library(igraph)
int <- as.matrix(Responsable_Ubicacion)
net1 <- graph_from_edgelist(int, directed = FALSE)
Responsable_Ubicacion <- na.omit(PAA_2024[c(14,15)])
library(igraph)
int <- as.matrix(Responsable_Ubicacion)
net1 <- graph_from_edgelist(int, directed = FALSE)
summary(net1)
plot(net1,
displaylabels = TRUE,
edge.width=0.5,
vertex.label.cex=0.6,
vertex.shape = "circle",
vertex.color = "white",
vertex.frame.color = "gray",
vertex.label.font=1,
layout =   layout_as_star)
View(int)
net1
NET <- as.matrix(net1)
View(NET)
NET
NET
print(NET)
NET <- matrix(NET)
View(NET)
NET <- as.matrix(net1)
colnames(NET)
rownames(NET)
library(readxl)
PAA_2024 <- read_excel("Data/PAA-2024.xlsx")
unique(PAA_2024$`Nombre del responsable`)
unique(PAA_2024$Ubicación)
variable.names(PAA_2024)
Responsable_Ubicacion <- na.omit(PAA_2024[c(14,15)])
library(igraph)
bn2 <- graph.data.frame(Responsable_Ubicacion,directed=FALSE)
bipartite.mapping(bn2)
V(bn2)$type <- bipartite_mapping(bn2)$type
V(bn2)$color <- ifelse(V(bn2)$type, "red", "green")
V(bn2)$shape <- ifelse(V(bn2)$type, "circle", "square")
V(bn2)$label.cex <- ifelse(V(bn2)$type, 0.5, 1)
V(bn2)$size <- sqrt(igraph::degree(bn2))
E(bn2)$color <- "lightgrey"
bn2.pr <- bipartite.projection(bn2)
Terms <- bn2.pr$proj2
centrality_scores <- igraph::eigen_centrality(Terms)
centrality_scores <- centrality_scores$vector
# Create a color palette with different colors
color_palette <- colorRampPalette(c("orange", "white", "darkgreen"))(length(unique(centrality_scores)))
# Assign colors to nodes based on their normalized centrality scores
node_colors <- color_palette[rank(centrality_scores)]
# Plot the network with node colors based on centrality
set.seed(56)
plot(Terms, vertex.label.color = "black", vertex.label.cex = 0.8, vertex.color = node_colors, vertex.size = 15, edge.width = 0.5, edge.color = "lightgray", layout = layout_with_drl, main = "")
Responsable_Ubicacion <- tolower(Responsable_Ubicacion)
unique(PAA_2024$`Nombre del responsable`)
library(readxl)
PAA_2024 <- read_excel("Data/PAA-2024.xlsx")
unique(PAA_2024$`Nombre del responsable`)
unique(PAA_2024$Ubicación)
variable.names(PAA_2024)
Responsable_Ubicacion <- na.omit(PAA_2024[c(14,15)])
unique(PAA_2024$`Nombre del responsable`)
PAA_2024$`Nombre del responsable` <- tolower(PAA_2024$`Nombre del responsable`)
unique(PAA_2024$`Nombre del responsable`)
unique(PAA_2024$Ubicación)
library(readxl)
PAA_2024 <- read_excel("Data/PAA-2024.xlsx")
unique(PAA_2024$`Nombre del responsable`)
unique(PAA_2024$Ubicación)
unique(PAA_2024$`Nombre del responsable`)
=======
View(correosBogota)
View(correosBarrancabermeja)
library(readxl)
PAA_2024 <- read_excel("Data/PAA-2024.xlsx")
library(dplyr)
correosBogota <- filter(PAA_2024, grepl('Bogotá', Ubicación))
correosBarrancabermeja <- filter(PAA_2024, grepl('Barrancabermeja', Ubicación))
unique(correosBogota$`Correo electrónico del responsable`)
unique(correosBarrancabermeja$`Nombre del responsable`)
library(readxl)
PAA_2024 <- read_excel("Data/PAA-2024.xlsx")
library(dplyr)
correosBogota <- filter(PAA_2024, grepl('Bogotá', Ubicación))
correosBarrancabermeja <- filter(PAA_2024, grepl('Barrancabermeja', Ubicación))
unique(correosBogota$`Correo electrónico del responsable`)
unique(correosBarrancabermeja$`Correo electrónico del responsable`)
correosbogotalicitacion<- filter(correosBogota$`Modalidad de selección`)
View(correosBogota)
library(readxl)
PAA_2024 <- read_excel("Data/PAA-2024.xlsx")
library(dplyr)
correosBogota <- filter(PAA_2024, grepl('Bogotá', Ubicación))
correosBarrancabermeja <- filter(PAA_2024, grepl('Barrancabermeja', Ubicación))
unique(correosBogota$`Correo electrónico del responsable`)
unique(correosBarrancabermeja$`Correo electrónico del responsable`)
unique(correosBogota$`Modalidad de selección`)
table(unique(correosBogota$`Modalidad de selección`))
table(correosBogota$`Modalidad de selección`)
library(readxl)
PAA_2024 <- read_excel("PAA_2024")
>>>>>>> ce2f508ef08393c6d6cc5da9a5970bec4479971f
library(readxl)
PAA_2024 <- read_excel("Data/PAA-2024.xlsx")
unique(PAA_2024$`Nombre del responsable`)
PAA_2024$`Nombre del responsable` <- tolower(PAA_2024$`Nombre del responsable`)
unique(PAA_2024$`Nombre del responsable`)
unique(PAA_2024$Ubicación)
variable.names(PAA_2024)
<<<<<<< HEAD
variable.names(PAA_2024)
Responsable_Ubicacion <- na.omit(PAA_2024[c(14,15)])
unique(PAA_2024$`Nombre del responsable`)
unique(PAA_2024$`Nombre del responsable`)
unique(Responsable_Ubicacion$`Nombre del responsable`)
unique(Responsable_Ubicacion$Ubicación)
bn2 <- graph.data.frame(Responsable_Ubicacion,directed=FALSE)
bipartite.mapping(bn2)
V(bn2)$type <- bipartite_mapping(bn2)$type
V(bn2)$color <- ifelse(V(bn2)$type, "red", "green")
V(bn2)$shape <- ifelse(V(bn2)$type, "circle", "square")
V(bn2)$label.cex <- ifelse(V(bn2)$type, 0.5, 1)
V(bn2)$size <- sqrt(igraph::degree(bn2))
E(bn2)$color <- "lightgrey"
plot(bn2)
plot(bn2, layout = layout_as_bipartite)
plot(bn2, layout = layout_in_circle)
View(Responsable_Ubicacion)
Responsable_Ubicacion$Ubicación <- sub(".*- ", "", Responsable_Ubicacion$Ubicación)
unique(Responsable_Ubicacion$`Nombre del responsable`)
unique(Responsable_Ubicacion$Ubicación)
library(igraph)
bn2 <- graph.data.frame(Responsable_Ubicacion,directed=FALSE)
bipartite.mapping(bn2)
V(bn2)$type <- bipartite_mapping(bn2)$type
V(bn2)$color <- ifelse(V(bn2)$type, "red", "green")
V(bn2)$shape <- ifelse(V(bn2)$type, "circle", "square")
V(bn2)$size <- sqrt(igraph::degree(bn2))
E(bn2)$color <- "lightgrey"
plot(bn2, layout = layout_in_circle)
plot(bn2, layout = layout_as_tree)
plot(bn2, layout = layout_components)
plot(bn2, layout = layout_in_circle)
V(bn2)$size <- sqrt(igraph::closeness(bn2))
E(bn2)$color <- "lightgrey"
plot(bn2, layout = layout_in_circle)
plt.x <- c(rep(2,6),rep(4,4))
plt.y <- c(7:2,6:3)
lay <- as.matrix(cbind(plt.x,plt.y))
View(lay)
unique(Responsable_Ubicacion$`Nombre del responsable`)
library(readxl)
PAA_2024 <- read_excel("Data/PAA-2024.xlsx")
unique(PAA_2024$`Nombre del responsable`)
PAA_2024$`Nombre del responsable` <- tolower(PAA_2024$`Nombre del responsable`)
unique(PAA_2024$`Nombre del responsable`)
unique(PAA_2024$Ubicación)
variable.names(PAA_2024)
Responsable_Ubicacion <- na.omit(PAA_2024[c(14,15)])
Responsable_Ubicacion$Ubicación <- sub(".*- ", "", Responsable_Ubicacion$Ubicación)
unique(Responsable_Ubicacion$`Nombre del responsable`)
unique(Responsable_Ubicacion$Ubicación)
library(igraph)
bn2 <- graph.data.frame(Responsable_Ubicacion,directed=FALSE)
bipartite.mapping(bn2)
V(bn2)$type <- bipartite_mapping(bn2)$type
V(bn2)$color <- ifelse(V(bn2)$type, "red", "green")
V(bn2)$shape <- ifelse(V(bn2)$type, "circle", "square")
V(bn2)$size <- sqrt(igraph::closeness(bn2))
E(bn2)$color <- "lightgrey"
plot(bn2, layout = layout_in_circle)
V(bn2)$size <- sqrt(igraph::betweenness(bn2))
E(bn2)$color <- "lightgrey"
plot(bn2, layout = layout_in_circle)
bn2.pr <- bipartite.projection(bn2)
bn2.pr$proj2
Responsables <- bn2.pr$proj2
Importantes <- degree(Responsables)
Importantes
bn2.pr$proj1
Ciudades <- bn2.pr$proj1
Importantes1 <- degree(Responsables)
Importantes2 <- degree(Ciudades)
Importantes2
library(readxl)
PAA_2024 <- read_excel("Data/PAA-2024.xlsx")
View(PAA_2024)
unique(PAA_2024$`Nombre del responsable`)
PAA_2024$`Nombre del responsable` <- tolower(PAA_2024$`Nombre del responsable`)
unique(PAA_2024$`Nombre del responsable`)
unique(PAA_2024$Ubicación)
variable.names(PAA_2024)
Responsable_Ubicacion <- na.omit(PAA_2024[c(14,15)])
View(Responsable_Ubicacion)
Responsable_Ubicacion$Ubicación <- sub(".*- ", "", Responsable_Ubicacion$Ubicación)
View(Responsable_Ubicacion)
unique(Responsable_Ubicacion$`Nombre del responsable`)
unique(Responsable_Ubicacion$Ubicación)
library(igraph)
bn2 <- graph.data.frame(Responsable_Ubicacion,directed=FALSE)
bipartite.mapping(bn2)
V(bn2)$type <- bipartite_mapping(bn2)$type
V(bn2)$color <- ifelse(V(bn2)$type, "red", "green")
V(bn2)$shape <- ifelse(V(bn2)$type, "circle", "square")
V(bn2)$size <- sqrt(igraph::betweenness(bn2))
E(bn2)$color <- "lightgrey"
plot(bn2, layout = layout_in_circle)
bn2.pr <- bipartite.projection(bn2)
Responsables <- bn2.pr$proj2
Ciudades <- bn2.pr$proj1
Importantes1 <- degree(Responsables)
Importantes2 <- degree(Ciudades)
Importantes1
View(PAA_2024)
unique(Responsable_Ubicacion$`Nombre del responsable`)
library(readxl)
PAA_2024 <- read_excel("Data/PAA-2024.xlsx")
unique(PAA_2024$`Nombre del responsable`)
PAA_2024$`Nombre del responsable` <- tolower(PAA_2024$`Nombre del responsable`)
unique(PAA_2024$`Nombre del responsable`)
unique(PAA_2024$Ubicación)
variable.names(PAA_2024)
=======
library(readxl)
>>>>>>> ce2f508ef08393c6d6cc5da9a5970bec4479971f
Responsable_Ubicacion <- na.omit(PAA_2024[c(14,15)])
Responsable_Ubicacion$Ubicación <- sub(".*- ", "", Responsable_Ubicacion$Ubicación)
Responsable_Ubicacion$`Nombre del responsable` <- gsub("i", "í", Responsable_Ubicacion$`Nombre del responsable`)
unique(Responsable_Ubicacion$`Nombre del responsable`)
unique(Responsable_Ubicacion$Ubicación)
library(igraph)
bn2 <- graph.data.frame(Responsable_Ubicacion,directed=FALSE)
bipartite.mapping(bn2)
V(bn2)$type <- bipartite_mapping(bn2)$type
V(bn2)$color <- ifelse(V(bn2)$type, "red", "green")
V(bn2)$shape <- ifelse(V(bn2)$type, "circle", "square")
V(bn2)$size <- sqrt(igraph::betweenness(bn2))
E(bn2)$color <- "lightgrey"
plot(bn2, layout = layout_in_circle)
<<<<<<< HEAD
=======
bn2.pr <- bipartite.projection(bn2)
Responsables <- bn2.pr$proj2
Ciudades <- bn2.pr$proj1
Importantes1 <- degree(Responsables)
Importantes2 <- degree(Ciudades)
library(readxl)
PAA_2024 <- read_excel("Data/PAA-2024.xlsx")
unique(PAA_2024$`Nombre del responsable`)
PAA_2024$`Nombre del responsable` <- tolower(PAA_2024$`Nombre del responsable`)
unique(PAA_2024$`Nombre del responsable`)
unique(PAA_2024$Ubicación)
variable.names(PAA_2024)
View(PAA_2024)
View(Responsable_Ubicacion)
library(igraph)
bn2 <- graph.data.frame(Responsable_Ubicacion,directed=FALSE)
bipartite.mapping(bn2)
V(bn2)$type <- bipartite_mapping(bn2)$type
V(bn2)$color <- ifelse(V(bn2)$type, "red", "green")
V(bn2)$shape <- ifelse(V(bn2)$type, "circle", "square")
V(bn2)$size <- sqrt(igraph::betweenness(bn2))
E(bn2)$color <- "lightgrey"
plot(bn2, layout = layout_in_circle)
bn2.pr <- bipartite.projection(bn2)
Responsables <- bn2.pr$proj2
Ciudades <- bn2.pr$proj1
ciudades_especificas <- c("Bogotá", "Barrancabermeja", "Barranquilla")
nodos_ciudades_especificas <- V(Ciudades)[V(Ciudades)$name %in% ciudades_especificas]
subgrafo_ciudades_especificas <- subgraph.edges(bn2, E(bn2)[V(bn2)$name %in% names(nodos_ciudades_especificas)])
V(subgrafo_ciudades_especificas)$size <- 20 + 5 * degree(subgrafo_ciudades_especificas)
E(subgrafo_ciudades_especificas)$width <- 1 + 2 * E(subgrafo_ciudades_especificas)$weight
library(igraph)
bn2 <- graph.data.frame(Responsable_Ubicacion,directed=FALSE)
bipartite.mapping(bn2)
V(bn2)$label.cex <- 0.8
V(bn2)$type <- bipartite_mapping(bn2)$type
V(bn2)$color <- ifelse(V(bn2)$type, "red", "green")
V(bn2)$shape <- ifelse(V(bn2)$type, "circle", "square")
V(bn2)$size <- sqrt(igraph::betweenness(bn2))
E(bn2)$color <- "lightgrey"
layout <- layout_with_fr(bn2)
plot(bn2, layout = layout, vertex.label.cex = V(bn2)$label.cex)
bn2.pr <- bipartite.projection(bn2)
Responsables <- bn2.pr$proj2
Ciudades <- bn2.pr$proj1
ciudades_especificas <- c("Bogotá", "Barrancabermeja", "Barranquilla")
nodos_ciudades_especificas <- V(Ciudades)[V(Ciudades)$name %in% ciudades_especificas]
subgrafo_ciudades_especificas <- subgraph.edges(bn2, E(bn2)[V(bn2)$name %in% names(nodos_ciudades_especificas)])
subgrafo_layout <- layout_with_fr(subgrafo_ciudades_especificas)
plot(subgrafo_ciudades_especificas, layout = subgrafo_layout, vertex.label.cex = 0.8)
Importantes1 <- degree(Responsables)
Importantes2 <- degree(Ciudades)
library(igraph)
bn2 <- graph.data.frame(Responsable_Ubicacion,directed=FALSE)
bipartite.mapping(bn2)
V(bn2)$label.cex <- 10.8
V(bn2)$type <- bipartite_mapping(bn2)$type
V(bn2)$color <- ifelse(V(bn2)$type, "red", "green")
V(bn2)$shape <- ifelse(V(bn2)$type, "circle", "square")
V(bn2)$size <- sqrt(igraph::betweenness(bn2))
E(bn2)$color <- "lightgrey"
layout <- layout_with_fr(bn2)
plot(bn2, layout = layout, vertex.label.cex = V(bn2)$label.cex)
bn2.pr <- bipartite.projection(bn2)
Responsables <- bn2.pr$proj2
Ciudades <- bn2.pr$proj1
ciudades_especificas <- c("Bogotá", "Barrancabermeja", "Barranquilla")
nodos_ciudades_especificas <- V(Ciudades)[V(Ciudades)$name %in% ciudades_especificas]
subgrafo_ciudades_especificas <- subgraph.edges(bn2, E(bn2)[V(bn2)$name %in% names(nodos_ciudades_especificas)])
subgrafo_layout <- layout_with_fr(subgrafo_ciudades_especificas)
plot(subgrafo_ciudades_especificas, layout = subgrafo_layout, vertex.label.cex = 0.8)
Importantes1 <- degree(Responsables)
Importantes2 <- degree(Ciudades)
library(igraph)
bn2 <- graph.data.frame(Responsable_Ubicacion,directed=FALSE)
bipartite.mapping(bn2)
V(bn2)$label.cex <- 0.8
V(bn2)$type <- bipartite_mapping(bn2)$type
V(bn2)$color <- ifelse(V(bn2)$type, "red", "green")
V(bn2)$shape <- ifelse(V(bn2)$type, "circle", "square")
V(bn2)$size <- sqrt(igraph::betweenness(bn2))
E(bn2)$color <- "lightgrey"
layout <- layout_with_fr(bn2)
plot(bn2, layout = layout, vertex.label.cex = V(bn2)$label.cex)
bn2.pr <- bipartite.projection(bn2)
Responsables <- bn2.pr$proj2
Ciudades <- bn2.pr$proj1
ciudades_especificas <- c("Bogotá", "Barrancabermeja", "Barranquilla")
nodos_ciudades_especificas <- V(Ciudades)[V(Ciudades)$name %in% ciudades_especificas]
subgrafo_ciudades_especificas <- subgraph.edges(bn2, E(bn2)[V(bn2)$name %in% names(nodos_ciudades_especificas)])
subgrafo_layout <- layout_with_fr(subgrafo_ciudades_especificas)
plot(subgrafo_ciudades_especificas, layout = subgrafo_layout, vertex.label.cex = 0.8)
Importantes1 <- degree(Responsables)
Importantes2 <- degree(Ciudades)
View(PAA_2024)
View(PAA_2024)
library(readxl)
PAA_2024 <- read_excel("Data/PAA-2024.xlsx")
# Asumiendo que ya has cargado tu base de datos en un dataframe llamado PAA_2024
# Función para obtener las iniciales de un nombre completo
obtener_iniciales <- function(nombre) {
# Dividir el nombre por espacios y tomar la primera letra de cada palabra
iniciales <- sapply(strsplit(nombre, " "), function(x) paste(substr(x, 1, 1), collapse = ""))
return(iniciales)
}
# Aplicar la función a la columna "Nombre del Responsable" para obtener las iniciales
PAA_2024$`Nombre del Responsable` <- sapply(PAA_2024$`Nombre del Responsable`, obtener_iniciales)
library(readxl)
PAA_2024 <- read_excel("Data/PAA-2024.xlsx")
unique(PAA_2024$`Nombre del responsable`)
PAA_2024$`Nombre del responsable` <- tolower(PAA_2024$`Nombre del responsable`)
unique(PAA_2024$`Nombre del responsable`)
unique(PAA_2024$Ubicación)
variable.names(PAA_2024)
library(readxl)
PAA_2024 <- read_excel("Data/PAA-2024.xlsx")
unique(PAA_2024$`Nombre del responsable`)
PAA_2024$`Nombre del responsable` <- tolower(PAA_2024$`Nombre del responsable`)
obtener_iniciales <- function(nombre) {
iniciales <- sapply(strsplit(nombre, " "), function(x) paste(substr(x, 1, 1), collapse = ""))
return(iniciales)
}
PAA_2024$`Nombre del Responsable` <- sapply(PAA_2024$`Nombre del Responsable`, obtener_iniciales)
library(readxl)
PAA_2024 <- read_excel("Data/PAA-2024.xlsx")
obtener_iniciales <- function(nombre) {
iniciales <- sapply(strsplit(nombre, " "), function(x) paste(substr(x, 1, 1), collapse = ""))
return(iniciales)
}
unique(PAA_2024$`Nombre del responsable`)
PAA_2024$`Nombre del responsable` <- tolower(PAA_2024$`Nombre del responsable`)
PAA_2024$`Nombre del Responsable` <- sapply(PAA_2024$`Nombre del Responsable`, obtener_iniciales)
library(readxl)
PAA_2024 <- read_excel("Data/PAA-2024.xlsx")
obtener_iniciales <- function(nombre) {
iniciales <- sapply(strsplit(nombre, " "), function(x) paste(substr(x, 1, 1), collapse = ""))
return(iniciales)
}
unique(PAA_2024$`Nombre del responsable`)
PAA_2024$`Nombre del Responsable` <- sapply(PAA_2024$`Nombre del Responsable`, obtener_iniciales)
library(readxl)
PAA_2024 <- read_excel("Data/PAA-2024.xlsx")
obtener_iniciales <- function(nombre) {
iniciales <- sapply(strsplit(nombre, " "), function(x) paste(substr(x, 1, 1), collapse = ""))
return(iniciales)
}
PAA_2024$`Nombre del Responsable` <- sapply(PAA_2024$`Nombre del Responsable`, obtener_iniciales)
library(readxl)
PAA_2024 <- read_excel("Data/PAA-2024.xlsx")
unique(PAA_2024$`Nombre del responsable`)
PAA_2024$`Nombre del responsable` <- tolower(PAA_2024$`Nombre del responsable`)
unique(PAA_2024$`Nombre del responsable`)
unique(PAA_2024$Ubicación)
variable.names(PAA_2024)
library(readxl)
PAA_2024 <- read_excel("Data/PAA-2024.xlsx")
unique(PAA_2024$`Nombre del responsable`)
PAA_2024$`Nombre del responsable` <- tolower(PAA_2024$`Nombre del responsable`)
obtener_iniciales <- function(nombre) {
iniciales <- sapply(strsplit(nombre, " "), function(x) paste(substr(x, 1, 1), collapse = ""))
return(iniciales)
}
PAA_2024$`Nombre del responsable` <- sapply(PAA_2024$`Nombre del responsable`, obtener_iniciales)
unique(PAA_2024$`Nombre del responsable`)
unique(PAA_2024$Ubicación)
variable.names(PAA_2024)
View(PAA_2024)
library(readxl)
Responsable_Ubicacion <- na.omit(PAA_2024[c(14,15)])
Responsable_Ubicacion$Ubicación <- sub(".*- ", "", Responsable_Ubicacion$Ubicación)
Responsable_Ubicacion$`Nombre del responsable` <- gsub("i", "í", Responsable_Ubicacion$`Nombre del responsable`)
unique(Responsable_Ubicacion$`Nombre del responsable`)
unique(Responsable_Ubicacion$Ubicación)
library(igraph)
bn2 <- graph.data.frame(Responsable_Ubicacion,directed=FALSE)
bipartite.mapping(bn2)
V(bn2)$type <- bipartite_mapping(bn2)$type
V(bn2)$color <- ifelse(V(bn2)$type, "red", "green")
V(bn2)$shape <- ifelse(V(bn2)$type, "circle", "square")
V(bn2)$size <- sqrt(igraph::betweenness(bn2))
E(bn2)$color <- "lightgrey"
plot(bn2, layout = layout_in_circle)
bn2.pr <- bipartite.projection(bn2)
Responsables <- bn2.pr$proj2
Ciudades <- bn2.pr$proj1
ciudades_especificas <- c("Bogotá", "Barrancabermeja", "Barranquilla")
nodos_ciudades_especificas <- V(Ciudades)[V(Ciudades)$name %in% ciudades_especificas]
subgrafo_ciudades_especificas <- subgraph.edges(bn2, E(bn2)[V(bn2)$name %in% names(nodos_ciudades_especificas)])
plot(subgrafo_ciudades_especificas, layout = layout_in_circle)
Importantes1 <- degree(Responsables)
Importantes2 <- degree(Ciudades)
>>>>>>> ce2f508ef08393c6d6cc5da9a5970bec4479971f
library(reticulate)
library(knitr)
reticulate::eng_python(options)
reticulate::repl_python()
library(readr)
Data_Figure2 <- read_csv("Data/Data_Figure2.csv")
View(Data_Figure2)
